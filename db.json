{
  "DataStructures": {
    "questions": [
      {
        "id": 1,
        "type": "multipleChoice",
        "question": "What is the time complexity of binary search?",
        "options": ["O(n)", "O(log n)", "O(n log n)", "O(1)"],
        "correctAnswer": "O(log n)"
      },
      {
        "id": 2,
        "type": "narrative",
        "question": "Explain the concept of inheritance in object-oriented programming.",
        "correctAnswer": "Inheritance is a mechanism in which a new class is derived from an existing class. It allows the derived class to inherit properties and behavior from the base class."
      },
      {
        "id": 3,
        "type": "textButtons",
        "question": "Which of the following is NOT a programming language?",
        "options": ["Java", "Python", "HTML", "CSS"],
        "correctAnswer": "HTML"
      },
      {
        "id": 4,
        "type": "imageSelection",
        "question": "Which of these pictures represents a stack?",
        "options": [
          {
            "imageURL": "https://example.com/stack.jpg",
            "label": "Picture A"
          },
          {
            "imageURL": "https://example.com/queue.jpg",
            "label": "Picture B"
          },
          {
            "imageURL": "https://example.com/array.jpg",
            "label": "Picture C"
          },
          {
            "imageURL": "https://example.com/linked-list.jpg",
            "label": "Picture D"
          }
        ],
        "correctAnswer": "Picture A"
      }
    ]
  },
  "Java": {
    "questions": [
      {
        "id": 5,
        "type": "multipleChoice",
        "question": "What is the main difference between abstract class and interface in Java?",
        "options": [
          "An abstract class can have both abstract and non-abstract methods, while an interface can only have abstract methods.",
          "An interface can have both abstract and non-abstract methods, while an abstract class can only have abstract methods.",
          "An abstract class cannot have constructors, while an interface can have constructors.",
          "An interface cannot have constructors, while an abstract class can have constructors."
        ],
        "correctAnswer": "An abstract class can have both abstract and non-abstract methods, while an interface can only have abstract methods."
      },
      {
        "id": 6,
        "type": "narrative",
        "question": "Explain the concept of encapsulation in Java.",
        "correctAnswer": "Encapsulation is the bundling of data and methods that operate on the data into a single unit or class."
      }
    ]
  }
}
